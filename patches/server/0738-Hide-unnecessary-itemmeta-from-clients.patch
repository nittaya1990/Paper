From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Noah van der Aa <ndvdaa@gmail.com>
Date: Tue, 3 Aug 2021 17:28:27 +0200
Subject: [PATCH] Hide unnecessary itemmeta from clients.


diff --git a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
index c334f29c69c1e6e3fe55cd6695e7df400cf36058..edfd20abcabc9c2046fa419799ce089ddf2e0e5b 100644
--- a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
+++ b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
@@ -863,6 +863,11 @@ public class PaperWorldConfig {
         behaviorTickRates = loadTickRates("behavior");
     }
 
+    public boolean hideItemmetaFromClients = false;
+    private void getHideItemmetaFromClients() {
+        hideItemmetaFromClients = getBoolean("hide-itemmeta-from-clients", hideItemmetaFromClients);
+    }
+
     private Table<String, String, Integer> loadTickRates(String type) {
         log("  " + type + ":");
         Table<String, String, Integer> table = HashBasedTable.create();
diff --git a/src/main/java/net/minecraft/world/entity/LivingEntity.java b/src/main/java/net/minecraft/world/entity/LivingEntity.java
index 2b7eeb5659b1083ef550eb9feb0b7ba8a92a92e3..6a86fd108f3a67e490083a6be50def01eed432ee 100644
--- a/src/main/java/net/minecraft/world/entity/LivingEntity.java
+++ b/src/main/java/net/minecraft/world/entity/LivingEntity.java
@@ -3041,6 +3041,50 @@ public abstract class LivingEntity extends Entity {
         equipment.forEach((enumitemslot, itemstack) -> {
             ItemStack itemstack1 = itemstack.copy();
 
+            // Paper start - hide unnecessary itemmeta from clients.
+            if (itemstack1.getTag() != null && this.level.paperConfig.hideItemmetaFromClients) {
+                CompoundTag nbt = itemstack1.getTag();
+                itemstack1.setCount(itemstack1.getCount() > 1 ? 2 : 1);
+                // Only show damage values for elytras.
+                if (itemstack1.is(Items.ELYTRA) && itemstack1.getDamageValue() >= itemstack1.getMaxDamage() - 1) {
+                    itemstack1.setDamageValue(itemstack1.getDamageValue());
+                } else {
+                    itemstack1.setDamageValue(0);
+                }
+
+                // We can't just strip out display, leather helmets still use the display.color tag.
+                if (nbt.get("display") instanceof CompoundTag displayTag) {
+                    displayTag.remove("Lore");
+                    displayTag.remove("Name");
+                }
+
+                if (nbt.get("Enchantments") instanceof ListTag enchantmentsTag && !enchantmentsTag.isEmpty()) {
+                    // The client still renders items with the enchantment glow if the enchantments tag contains at least one (empty) child.
+                    ListTag enchantments = new ListTag();
+                    enchantments.add(new CompoundTag());
+                    nbt.put("Enchantments", enchantments);
+                }
+                nbt.remove("AttributeModifiers");
+
+                // Bundles change their texture based on their fullness.
+                if (itemstack1.is(Items.BUNDLE) && nbt.get("Items") instanceof ListTag oldItems && !oldItems.isEmpty()) {
+                    org.bukkit.inventory.meta.BundleMeta bundleMeta = (org.bukkit.inventory.meta.BundleMeta) itemstack1.asBukkitMirror().getItemMeta();
+                    int sizeUsed = 0;
+                    for (org.bukkit.inventory.ItemStack item : bundleMeta.getItems()) {
+                        int scale = 64 / item.getMaxStackSize();
+                        sizeUsed += scale * item.getAmount();
+                    }
+                    // Now we add a single fake item that uses the same amount of slots as all other items.
+                    ListTag items = new ListTag();
+                    items.add(new ItemStack(Items.PAPER, sizeUsed).save(new CompoundTag()));
+                    nbt.put("Items", items);
+                } else {
+                    // No need to send the items inside.
+                    nbt.remove("Items");
+                }
+            }
+            // Paper end.
+
             list.add(Pair.of(enumitemslot, itemstack1));
             switch (enumitemslot.getType()) {
                 case HAND:
